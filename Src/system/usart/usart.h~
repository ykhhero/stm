#ifndef __USART_H
#define __USART_H
#include "stdio.h"	
#include "sys.h" 
//////////////////////////////////////////////////////////////////////////////////	 
//本程序只供学习使用，未经作者许可，不得用于其它任何用途
//ALIENTEK STM32开发板
//串口1初始化		   
//正点原子@ALIENTEK
//技术论坛:www.openedv.com
//修改日期:2012/8/18
//版本：V1.5
//版权所有，盗版必究。
//Copyright(C) 广州市星翼电子科技有限公司 2009-2019
//All rights reserved
//********************************************************************************
//V1.3修改说明 
//支持适应不同频率下的串口波特率设置.
//加入了对printf的支持
//增加了串口接收命令功能.
//修正了printf第一个字符丢失的bug
//V1.4修改说明
//1,修改串口初始化IO的bug
//2,修改了USART_RX_STA,使得串口最大接收字节数为2的14次方
//3,增加了USART_REC_LEN,用于定义串口最大允许接收的字节数(不大于2的14次方)
//4,修改了EN_USART1_RX的使能方式
//V1.5修改说明
//1,增加了对UCOSII的支持
#define USART_REC_LEN  			200  	//定义最大接收字节数 200
#define USART2_REC_LEN  		1024  	//定义最大接收字节数
#define EN_USART1_RX 			1		//使能（1）/禁止（0）串口1接收
#define EN_USART2_RX 			1		//使能（1）/禁止（0）串口2接收
#define UART1_FILE			((FILE*)1)
#define UART2_FILE			((FILE*)2)
extern void set_uart_no_for_printf(unsigned char no);
extern u8  USART_RX_BUF[USART_REC_LEN]; 		//接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 
extern u16 USART_RX_STA;         			//接收状态标记	
extern void uart_init(u32 bound);

extern void set_uart2_rx_done_flag(u16 flag);
extern u16 uart2_rx_done_flag;	//0x0d0a: when received 0x0d 0x0a, then complete one time receive, 0: receive as more as possible
extern u8  USART2_RX_BUF[USART2_REC_LEN]; 		//接收缓冲,最大USART2_REC_LEN个字节.末字节为换行符 
extern u16 USART2_RX_STA;         			//接收状态标记	
extern void uart2_init(u32 bound);

extern void print_hex(FILE*, const char*, int len);
extern void print_hex_ln(FILE* f, const char* str, int len);
#endif


